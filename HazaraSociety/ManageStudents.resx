<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="txtSearch.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAwAAAAB/CAYAAABYHaUHAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAmKSURBVHhe7dtbTh0xEARQ9r/pREQiiq4CfoxdRZTDt+3u
        Of3TJeDt7cDPDz8ECBAgQIAAAQIECFwXOLC67z9x/esUIECAAAECBAgQIEDgU4H9TX7xphkQIECAAAEC
        BAgQIPB9BBbX+fnj3+cTdUKAAAECBAgQIECAwKvA/GY/cRIvAQIECBAgQIAAAQLfX2BitR8f+f6fqUMC
        BAgQIECAAAECBD4Exhv+JycQEiBAgAABAgQIECDw7wosB4ETn7pc1AUCBAgQIECAAAECBN7iu/hOQXMi
        QIAAAQIECBAgQOCewLUdffXhe5/oZQIECBAgQIAAAQIEXgWO7utHHzMrAgQIECBAgAABAgSuCazs7p82
        MfvIta/wMAECBAgQIECAAAEC0wKP9vdHl6dbdJAAAQIECBAgQIAAgZMC23v8zMWTjXqLAAECBAgQIECA
        AIEzAsu7/MyF9zNn2vMKAQIECBAgQIAAAQKnBWZ2+t81lw6f7tR7BAgQIECAAAECBAg8Flja6UeHH3fj
        AQIECBAgQIAAAQIErgtM7fWjQ/705/qcFCBAgAABAgQIECBwRGBqtx8dOtKJRwgQIECAAAECBAgQiAgM
        9/vhgUibihAgQIAAAQIECBAgcEJguN8PD5zowhsECBAgQIAAAQIECEQEhvv98ECkTUUIECBAgAABAgQI
        EDghMNzvhwdOdOENAgQIECBAgAABAgQiAsP9/qsDkQ4VIUCAAAECBAgQIEDgqMCXO74AcNTaYwQIECBA
        gAABAgTqAgJAfQQaIECAAAECBAgQIJATEABy1ioRIECAAAECBAgQqAsIAPURaIAAAQIECBAgQIBATkAA
        yFmrRIAAAQIECBAgQKAuIADUR6ABAgQIECBAgAABAjkBASBnrRIBAgQIECBAgACBuoAAUB+BBggQIECA
        AAECBAjkBASAnLVKBAgQIECAAAECBOoCAkB9BBogQIAAAQIECBAgkBMQAHLWKhEgQIAAAQIECBCoCwgA
        9RFogAABAgQIECBAgEBOQADIWatEgAABAgQIECBAoC4gANRHoAECBAgQIECAAAECOQEBIGetEgECBAgQ
        IECAAIG6gABQH4EGCBAgQIAAAQIECOQEBICctUoECBAgQIAAAQIE6gICQH0EGiBAgAABAgQIECCQExAA
        ctYqESBAgAABAgQIEKgLCAD1EWiAAAECBAgQIECAQE5AAMhZq0SAAAECBAgQIECgLiAA1EegAQIECBAg
        QIAAAQI5AQEgZ60SAQIECBAgQIAAgbqAAFAfgQYIECBAgAABAgQI5AQEgJy1SgQIECBAgAABAgTqAgJA
        fQQaIECAAAECBAgQIJATEABy1ioRIECAAAECBAgQqAsIAPURaIAAAQIECBAgQIBATkAAyFmrRIAAAQIE
        CBAgQKAuIADUR6ABAgQIECBAgAABAjkBASBnrRIBAgQIECBAgACBuoAAUB+BBggQIECAAAECBAjkBASA
        nLVKBAgQIECAAAECBOoCAkB9BBogQIAAAQIECBAgkBMQAHLWKhEgQIAAAQIECBCoCwgA9RFogAABAgQI
        ECBAgEBOQADIWatEgAABAgQIECBAoC4gANRHoAECBAgQIECAAAECOQEBIGetEgECBAgQIECAAIG6gABQ
        H4EGCBAgQIAAAQIECOQEBICctUoECBAgQIAAAQIE6gICQH0EGiBAgAABAgQIECCQExAActYqESBAgAAB
        AgQIEKgLCAD1EWiAAAECBAgQIECAQE5AAMhZq0SAAAECBAgQIECgLiAA1EegAQIECBAgQIAAAQI5AQEg
        Z60SAQIECBAgQIAAgbqAAFAfgQYIECBAgAABAgQI5AQEgJy1SgQIECBAgAABAgTqAgJAfQQaIECAAAEC
        BAgQIJATEABy1ioRIECAAAECBAgQqAsIAPURaIAAAQIECBAgQIBATkAAyFmrRIAAAQIECBAgQKAuIADU
        R6ABAgQIECBAgAABAjkBASBnrRIBAgQIECBAgACBuoAAUB+BBggQIECAAAECBAjkBASAnLVKBAgQIECA
        AAECBOoCAkB9BBogQIAAAQIECBAgkBMQAHLWKhEgQIAAAQIECBCoCwgA9RFogAABAgQIECBAgEBOQADI
        WatEgAABAgQIECBAoC4gANRHoAECBAgQIECAAAECOQEBIGetEgECBAgQIECAAIG6gABQH4EGCBAgQIAA
        AQIECOQEBICctUoECBAgQIAAAQIE6gICQH0EGiBAgAABAgQIECCQExAActYqESBAgAABAgQIEKgLCAD1
        EWiAAAECBAgQIECAQE5AAMhZq0SAAAECBAgQIECgLiAA1EegAQIECBAgQIAAAQI5AQEgZ60SAQIECBAg
        QIAAgbqAAFAfgQYIECBAgAABAgQI5AQEgJy1SgQIECBAgAABAgTqAgJAfQQaIECAAAECBAgQIJATEABy
        1ioRIECAAAECBAgQqAsIAPURaIAAAQIECBAgQIBATkAAyFmrRIAAAQIECBAgQKAuIADUR6ABAgQIECBA
        gAABAjkBASBnrRIBAgQIECBAgACBuoAAUB+BBggQIECAAAECBAjkBLYDwPvFXJsqESBAgAABAgQIECDw
        VOCr5f/Xfj888LQD9wkQIECAAAECBAgQiAkM9/vhgVirChEgQIAAAQIECBAg8FRguN8PDzztwH0CBAgQ
        IECAAAECBGICw/1+eCDWqkIECBAgQIAAAQIECDwVGO73owP+EfjpCNwnQIAAAQIECBAgkBGY3u1HBzPt
        qkKAAAECBAgQIECAwBOB6b1+dNBvAZ6MwV0CBAgQIECAAAEC9wWWdvqlw/d7V4EAAQIECBAgQIAAgUWB
        5Z1++cJiQ44TIECAAAECBAgQIHBHYGuXn7nkT4HuDMyrBAgQIECAAAECBHYFHu3xjy7vduweAQIECBAg
        QIAAAQJbAo/399kH/CZgaz4uESBAgAABAgQIEDgmcGx3X3lIEDg2Pw8RIECAAAECBAgQmBK4sq+vPioI
        TM3KIQIECBAgQIAAAQLbAtd39J0Cr3e2v85FAgQIECBAgAABAv+xQGUXP1HUGwQIECBAgAABAgQIdAS2
        81OnXVUJECBAgAABAgQIENgR2F78/7y4U9gdAgQIECBAgAABAgSyAkeW/49Hsq2rRoAAAQIECBAgQIDA
        isDR5d9vA1bonSVAgAABAgQIECCQE7i2+L8+nPsklQgQIECAAAECBAgQeBWILf5/K2QcBAgQIECAAAEC
        BAjcFzix9P8E2OMcU1exrDIAAAAASUVORK5CYII=
</value>
  </data>
  <data name="txtSearch.Icon" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAYAAADimHc4AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAKUSURBVHhe7ZnhcsMwCIP7/i+9rXfLXdbVCTIYkKv+xiB9
        IknbPB76iIAIiIAIiIAIiIAIiIAIiIAIiABK4Mv5Qeep/oeAk/nwuODeEFgF/rWvgnghkAVeQTQBryAW
        3udnr6aPuS3NAso6t3UQHogomMxZqLaS+hkgUUIrZ0d5cPVBAbiGXRzuomOVv7d9EdNZwjpqWubdanaZ
        gEHjrrpCOXQ32V2fKwwWcyw64TAsxuCmiw4waTUhYDTEqHkYxp0ZU4oFRay6/6BiN8Gu//ZlSsFiQyOp
        A6AWf4qJ1getcPA9BXRJZRZfBZCpI2IWnZddtv8Ij84P3cbcXCYKIOI+4uxBtVRUYo3BUHmiEqsAjASK
        y6iWikqsMVgqT1RiFYCRQHEZ1VJRiTUGS+WJSqwCMBIoLqNaKiqxxmCpPFGJ/bQAnuEYPbcp2+rPOAWQ
        tFc73YYovdBdtoPFpPVBK3yXd8JPH+whsOtXAEnP28sxrFvEqvtfGHdGOn4tZdTsugo6hbAdfMvDWAEk
        PCwsm1UZRHd9IRF1NdlVVwj0o4nV5FEXOvyiGaIrS1P4HMTka224mN+GqKZVOpb3RY2O6qOEzuiJmp3e
        Z8as5QxqxNJzdfCoZne9x/TM2dlnzdUsN4SqBghA6+8EpKe3topbyFzE/Hkgcm5lbQiEqiYImJFGpEdk
        bRWzsLkIDMtQpJ+n1qKlfQ0CADWD9EZqUR1t6zNNI7Pe1baFOCsMATI7Q+cGBAS/cDUEX/ALCRSO1uYL
        fiGBwtHafMEvJFA4Wpsv+IUECkdr8wW/kEDhaG1+IfxjtCWEBjL3lrDli2q2yD7i//TuoZxD6K51W33P
        ELY1J2MiIAIiIAIiIAIiIAIiIAIiIAL7EvgGUm8CQgJPW6QAAAAASUVORK5CYII=
</value>
  </data>
</root>